"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/dashboard",{

/***/ "./components/Map.tsx":
/*!****************************!*\
  !*** ./components/Map.tsx ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _googlemaps_js_api_loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @googlemaps/js-api-loader */ \"./node_modules/@googlemaps/js-api-loader/dist/index.mjs\");\n\nvar _s = $RefreshSig$();\n\n\nconst Map = (param)=>{\n    let { centers = [], height = \"500px\", onCenterSelect } = param;\n    _s();\n    const mapRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const googleMapRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const markersRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const loaderRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const mapContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Use a new container for Google Maps to attach to\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Create a container for Google Maps to use that's separate from React's control\n        if (mapRef.current && !mapContainerRef.current) {\n            const container = document.createElement(\"div\");\n            container.style.width = \"100%\";\n            container.style.height = \"100%\";\n            mapRef.current.appendChild(container);\n            mapContainerRef.current = container;\n        }\n        return ()=>{\n        // Don't remove the container, just let React handle its parent\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!mapContainerRef.current) return;\n        // Validate centers data - ensure both latitude and longitude are valid numbers\n        const validCenters = centers.filter((center)=>typeof (center === null || center === void 0 ? void 0 : center.latitude) === \"number\" && typeof (center === null || center === void 0 ? void 0 : center.longitude) === \"number\" && !isNaN(center.latitude) && !isNaN(center.longitude));\n        if (validCenters.length === 0) {\n            console.warn(\"No valid centers with coordinates to display on map\");\n            setError(\"No location data available\");\n            return;\n        }\n        // Load Google Maps API\n        const apiKey = \"AIzaSyA9qs4iPMj6Rp6Uf-zQGqKEWCasZU-K5PI\";\n        if (!apiKey) {\n            setError(\"Google Maps API key not found\");\n            return;\n        }\n        if (!loaderRef.current) {\n            loaderRef.current = new _googlemaps_js_api_loader__WEBPACK_IMPORTED_MODULE_2__.Loader({\n                apiKey,\n                version: \"weekly\"\n            });\n        }\n        let isMounted = true;\n        loaderRef.current.load().then(()=>{\n            if (!isMounted || !mapContainerRef.current) return;\n            // Clear previous markers\n            if (markersRef.current) {\n                markersRef.current.forEach((marker)=>marker.setMap(null));\n                markersRef.current = [];\n            }\n            // Calculate center point of all centers\n            const bounds = new google.maps.LatLngBounds();\n            validCenters.forEach((center)=>{\n                // Since we filtered validCenters to ensure both lat and lng are numbers,\n                // we can now safely assert that they're non-null numbers\n                const lat = center.latitude;\n                const lng = center.longitude;\n                bounds.extend({\n                    lat,\n                    lng\n                });\n            });\n            // Initialize map or reuse existing\n            if (!googleMapRef.current) {\n                const map = new google.maps.Map(mapContainerRef.current, {\n                    center: bounds.isEmpty() ? {\n                        lat: 0,\n                        lng: 0\n                    } : bounds.getCenter(),\n                    zoom: 8,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP\n                });\n                googleMapRef.current = map;\n            }\n            const map = googleMapRef.current;\n            // Fit map to show all markers\n            if (!bounds.isEmpty()) {\n                map.fitBounds(bounds);\n            }\n            // Add markers for each center\n            validCenters.forEach((center)=>{\n                const marker = new google.maps.Marker({\n                    position: {\n                        lat: center.latitude,\n                        lng: center.longitude\n                    },\n                    map,\n                    title: center.name\n                });\n                if (onCenterSelect) {\n                    marker.addListener(\"click\", ()=>{\n                        if (isMounted && onCenterSelect) {\n                            onCenterSelect(center.id);\n                        }\n                    });\n                }\n                markersRef.current.push(marker);\n            });\n            if (isMounted) {\n                setIsLoaded(true);\n            }\n        }).catch((err)=>{\n            if (isMounted) {\n                console.error(\"Error loading Google Maps:\", err);\n                setError(\"Failed to load Google Maps\");\n            }\n        });\n        // Cleanup\n        return ()=>{\n            isMounted = false;\n            // Clear all markers but don't destroy the map\n            if (markersRef.current) {\n                markersRef.current.forEach((marker)=>marker.setMap(null));\n                markersRef.current = [];\n            }\n        };\n    }, [\n        centers,\n        onCenterSelect\n    ]);\n    // Complete cleanup on unmount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        return ()=>{\n            if (googleMapRef.current) {\n                // Just remove references but don't manipulate DOM\n                googleMapRef.current = null;\n            }\n            markersRef.current = [];\n        };\n    }, []);\n    if (error) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                height,\n                width: \"100%\"\n            },\n            className: \"flex items-center justify-center bg-gray-100 border rounded\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-red-500\",\n                children: error\n            }, void 0, false, {\n                fileName: \"/Users/drewbernard/Documents/Visual Studio/PHC Data Collection/components/Map.tsx\",\n                lineNumber: 173,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/drewbernard/Documents/Visual Studio/PHC Data Collection/components/Map.tsx\",\n            lineNumber: 169,\n            columnNumber: 7\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            height,\n            width: \"100%\"\n        },\n        className: \"relative\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            ref: mapRef,\n            style: {\n                height: \"100%\",\n                width: \"100%\"\n            },\n            className: \"rounded border\",\n            children: !isLoaded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center bg-gray-100\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-gray-500\",\n                    children: \"Loading map...\"\n                }, void 0, false, {\n                    fileName: \"/Users/drewbernard/Documents/Visual Studio/PHC Data Collection/components/Map.tsx\",\n                    lineNumber: 187,\n                    columnNumber: 13\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/drewbernard/Documents/Visual Studio/PHC Data Collection/components/Map.tsx\",\n                lineNumber: 186,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/drewbernard/Documents/Visual Studio/PHC Data Collection/components/Map.tsx\",\n            lineNumber: 180,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/drewbernard/Documents/Visual Studio/PHC Data Collection/components/Map.tsx\",\n        lineNumber: 179,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Map, \"/1x38tZQ/1MMzpMDDTvUjqnFBn4=\");\n_c = Map;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Map);\nvar _c;\n$RefreshReg$(_c, \"Map\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Map.tsx\n"));

/***/ })

});